<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2018. syshlang
  ~ @File: applicationContext-shiro.xml
  ~ @Description:
  ~ @Author: sunys
  ~ @Date: 18-8-30 下午9:36
  ~ @since:
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- <context:property-placeholder location="classpath*:shiro.properties"/>-->

    <bean id="shiroProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="location">
            <value>classpath:shiro.properties</value>
        </property>
    </bean>

    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="${system.loginUrl}"/>
        <property name="successUrl" value="${system.successUrl}"/>
        <property name="unauthorizedUrl" value="${system.unauthorizedUrl}"/>
        <property name="filters">
            <util:map>
                <entry key="authc" value-ref="authenticationFilter"/>
                <entry key="sessionForceLogout" value-ref="sessionForceLogout"/>
            </util:map>
        </property>
        <property name="filterChainDefinitionMap" ref="filterChainDefinitionMap"/>
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="cacheManager" ref="shiroCacheManager"/>
        <property name="authenticator" ref="authenticator"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
        <property name="realms">
            <list>
                <ref bean="systemRealm"/>
            </list>
        </property>
    </bean>
    <bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:META-INF/spring/ehcache-shiro.xml"/>
    </bean>
    <bean id="authenticator"
          class="org.apache.shiro.authc.pam.ModularRealmAuthenticator">
        <property name="authenticationStrategy">
            <bean class="org.apache.shiro.authc.pam.AllSuccessfulStrategy"/>
        </property>
    </bean>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 全局session超时时间 -->
        <property name="globalSessionTimeout" value="${shiro.session.timeout}"/>
        <!-- sessionDAO -->
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        <property name="sessionValidationSchedulerEnabled" value="false"/>
        <property name="sessionListeners">
            <list>
                <ref bean="sessionListener"/>
            </list>
        </property>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!-- 会话DAO，可重写，持久化session -->
    <bean id="sessionDAO" class="com.syshlang.system.authority.shiro.session.ShiroSessionDao">
        <property name="forceLogout" value="${shiro.forceLogout.flag}"/>
        <property name="theWayCacheSession" value="${shiro.way.cachesession}"/>
    </bean>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!-- 不会暴露给客户端 -->
        <property name="httpOnly" value="true"/>
        <!-- 设置Cookie的过期时间，秒为单位，默认-1表示关闭浏览器时过期Cookie -->
        <property name="maxAge" value="-1"/>
        <!-- Cookie名称 -->
        <property name="name" value="${shiro.session.id}"/>
    </bean>
    <!-- 会话监听器 -->
    <bean id="sessionListener" class="com.syshlang.system.authority.shiro.listener.ShiroSessionListener"/>
    <!-- session工厂 -->
    <bean id="sessionFactory" class="com.syshlang.system.authority.shiro.session.ShiroSessionFactory"/>
    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>
    <!-- rememberMe缓存cookie -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <!-- 不会暴露给客户端 -->
        <property name="httpOnly" value="true"/>
        <!-- 记住我cookie生效时间 -->
        <property name="maxAge" value="${shiro.rememberMe.timeout}"/>
    </bean>
    <!-- realm实现，继承自AuthorizingRealm -->
    <bean id="systemRealm" class="com.syshlang.system.authority.shiro.realm.ShiroAuthorityRealm">
        <property name="cachingEnabled" value="false"/>
        <property name="credentialsMatcher">
            <!--<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="${shiro.hashAlgorithmName}"></property>
                <property name="hashIterations" value="${shiro.hashIterations}"></property>
            </bean>-->
            <bean class="com.syshlang.system.authority.shiro.matcher.LoginCredentialsMatcher">
                <property name="hashAlgorithmName" value="${shiro.hashAlgorithmName}"></property>
                <property name="hashIterations" value="${shiro.hashIterations}"></property>
                <property name="maxRetryLimit" value="${shiro.user.LoginRetryLimit}"/>
                <constructor-arg ref="shiroCacheManager"/>
                <property name="storedCredentialsHexEncoded" value="true"/>
            </bean>
        </property>
    </bean>

    <!-- 重写authc过滤器 -->
    <bean id="authenticationFilter" class="com.syshlang.system.authority.shiro.filter.ShiroAuthenticationFilter">
        <property name="localSessionKeyPrefix" value="${shiro.local.session.key.prefix}"/>
    </bean>

    <!-- 强制退出会话过滤器 -->
    <bean id="sessionForceLogout" class="com.syshlang.system.authority.shiro.filter.ShiroSessionForceLogoutFilter">
        <property name="loginUrl" value="${system.loginUrl}"/>
        <property name="forceLogout" value="${shiro.forceLogout.flag}"/>
    </bean>

    <!-- 配置一个 bean, 该 bean 实际上是一个 Map. 通过实例工厂方法的方式 -->
    <bean id="filterChainDefinitionMap"
          factory-bean="filterChainDefinitionMapBuilder" factory-method="buildFilterChainDefinitionMap">
    </bean>
    <bean id="filterChainDefinitionMapBuilder"
          class="com.syshlang.system.authority.shiro.factory.ShiroFilterChainDefinitionMapBuilder">
    </bean>

    <!-- 设置SecurityUtils，相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!-- 开启Shiro Spring AOP权限注解@RequiresPermissions的支持 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

</beans>