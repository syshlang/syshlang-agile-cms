@startuml
actor  browser #red
participant "server(系统1)" #green
participant "server(系统2)" #green
database "SSO(认证中心)" #blue

browser -> "server(系统1)": 访问
"server(系统1)" -[#0000FF]> "server(系统1)": 验证未登录
"server(系统1)" --> "SSO(认证中心)": 跳转（系统1的地址）
"SSO(认证中心)" --[#0000FF]> "SSO(认证中心)":  验证未登录
"SSO(认证中心)" -->"browser":登录页面（系统1的地址）
browser -> "SSO(认证中心)": 登录（用户名、密码、系统1的地址）
"SSO(认证中心)" --[#0000FF]> "SSO(认证中心)":  验证成功
"SSO(认证中心)" --[#0000FF]> "SSO(认证中心)":  创建全局会话
"SSO(认证中心)" --[#0000FF]> "SSO(认证中心)":  创建授权令牌
"SSO(认证中心)" --> "server(系统1)": 跳转（授权令牌）
"server(系统1)" -> "SSO(认证中心)": 校验（授权令牌、系统1的地址）
"SSO(认证中心)" --[#0000FF]> "SSO(认证中心)":  授权令牌有效
"SSO(认证中心)" --[#0000FF]> "SSO(认证中心)":  注册系统\n（系统1的地址）
"SSO(认证中心)" --> "server(系统1)": 授权令牌有效
"server(系统1)" -[#0000FF]> "server(系统1)": 创建局部会话\n（授权令牌有效）
"server(系统1)" -> browser: 受保护资源
browser -> "server(系统2)": 访问
"server(系统2)" -[#0000FF]> "server(系统2)": 验证未登录
"server(系统2)" --> "SSO(认证中心)": 跳转（系统2的地址）
"SSO(认证中心)" --[#0000FF]> "SSO(认证中心)":  验证未登录
"SSO(认证中心)" --> "server(系统2)": 跳转（授权令牌）
"server(系统2)" -> "SSO(认证中心)": 校验（授权令牌、系统2的地址）
"SSO(认证中心)" --[#0000FF]> "SSO(认证中心)":  授权令牌有效
"SSO(认证中心)" --[#0000FF]> "SSO(认证中心)":  注册系统\n（系统2的地址）
"SSO(认证中心)" --> "server(系统2)": 授权令牌有效
"server(系统2)" -[#0000FF]> "server(系统2)": 创建局部会话\n（授权令牌有效）
"server(系统2)" -> browser: 受保护资源
@endumle